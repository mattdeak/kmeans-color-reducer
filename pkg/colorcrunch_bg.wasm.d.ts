/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function start(): void;
export function __wbg_colorcruncher_free(a: number): void;
export function __wbg_colorcruncherbuilder_free(a: number): void;
export function colorcruncherbuilder__new(): number;
export function colorcruncherbuilder_withMaxColors(a: number, b: number): number;
export function colorcruncherbuilder_setMaxColors(a: number, b: number): void;
export function colorcruncherbuilder_withSampleRate(a: number, b: number): number;
export function colorcruncherbuilder_setSampleRate(a: number, b: number): void;
export function colorcruncherbuilder_withTolerance(a: number, b: number): number;
export function colorcruncherbuilder_setTolerance(a: number, b: number): void;
export function colorcruncherbuilder_withMaxIterations(a: number, b: number): number;
export function colorcruncherbuilder_setMaxIterations(a: number, b: number): void;
export function colorcruncherbuilder_withInitializer(a: number, b: number, c: number): number;
export function colorcruncherbuilder_setInitializer(a: number, b: number, c: number): void;
export function colorcruncherbuilder_withAlgorithm(a: number, b: number, c: number): number;
export function colorcruncherbuilder_setAlgorithm(a: number, b: number, c: number): void;
export function colorcruncherbuilder_withSeed(a: number, b: number): number;
export function colorcruncherbuilder_setSeed(a: number, b: number): void;
export function colorcruncherbuilder_build(a: number): number;
export function colorcruncher_builder(a: number, b: number): number;
export function colorcruncher_quantizeImage(a: number, b: number, c: number): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h09cf73a106909c04(a: number, b: number, c: number): void;
export function _dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h70355f2cee0091f7(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __wbindgen_exn_store(a: number): void;
export function wasm_bindgen__convert__closures__invoke2_mut__h54e00a299b7bd240(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
